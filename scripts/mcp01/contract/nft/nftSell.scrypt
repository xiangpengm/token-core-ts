import "nftProto.scrypt";

contract NftSell {
    Ripemd160 senderAddress;
    int bsvRecAmount;
    bytes nftCodeHash;
    bytes nftID;

    public function unlock(
        SigHashPreimage txPreimage,
        bytes nftScript,    // only cancel need
        PubKey senderPubKey,    // only cancel need
        Sig senderSig,    // only cancel need
        int nftOutputSatoshis,    // only cancel need
        int op    // 1 sell 2 cancel
    ) {
        bytes outputs = b'';
        if (op == 1) {
            bytes outputScript = Utils.buildPublicKeyHashScript(this.senderAddress);
            outputs = Utils.buildOutput(outputScript, this.bsvRecAmount);
        }
        else {
            // check sig
            require(hash160(senderPubKey) == this.senderAddress);
            require(checkSig(senderSig, senderPubKey));

            // verify nft
            int nftScriptLen = len(nftScript);
            require(NftProto.getScriptCodeHash(nftScript, nftScriptLen) == this.nftCodeHash);
            require(NftProto.getNftID(nftScript, nftScriptLen) == this.nftID);

            bytes outputScript = NftProto.getNewNftScript(nftScript, nftScriptLen, this.senderAddress);
            outputs = Utils.buildOutput(outputScript, nftOutputSatoshis);
        }

        require(hash256(outputs) == SigHash.hashOutputs(txPreimage));

        require(Tx.checkPreimageSigHashTypeOCS(txPreimage, ProtoHeader.SIG_HASH_SINGLE));

    }
}
